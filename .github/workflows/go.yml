# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25'

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

    - name: Build binaries
      run: |
      
        GOOS=linux GOARCH=amd64 go build -o ${{ github.event.repository.name }}-linux-amd64 ./cmd/keycraft
        GOOS=darwin GOARCH=arm64 go build -o ${{ github.event.repository.name }}-darwin-arm64 ./cmd/keycraft
        GOOS=windows GOARCH=amd64 go build -o ${{ github.event.repository.name }}-windows-amd64.exe ./cmd/keycraft

    - name: Upload binaries as artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.event.repository.name }}-binaries
        path: |
          ${{ github.event.repository.name }}-linux-amd64
          ${{ github.event.repository.name }}-darwin-arm64
          ${{ github.event.repository.name }}-windows-amd64.exe

    - name: Package data
      run: tar -czf data.tar.gz data/

    - name: Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: |
          ${{ github.event.repository.name }}-linux-amd64
          ${{ github.event.repository.name }}-darwin-arm64
          ${{ github.event.repository.name }}-windows-amd64.exe
          data.tar.gz
        generate_release_notes: true
